<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPesquisarEmprestimo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>