//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace View.CGenero {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CGenero.ICGenero")]
    public interface ICGenero {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Cadastrar", ReplyAction="http://tempuri.org/ICGenero/CadastrarResponse")]
        bool Cadastrar(Model.GENERO oGENERO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Cadastrar", ReplyAction="http://tempuri.org/ICGenero/CadastrarResponse")]
        System.Threading.Tasks.Task<bool> CadastrarAsync(Model.GENERO oGENERO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Alterar", ReplyAction="http://tempuri.org/ICGenero/AlterarResponse")]
        bool Alterar(Model.GENERO oGENERO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Alterar", ReplyAction="http://tempuri.org/ICGenero/AlterarResponse")]
        System.Threading.Tasks.Task<bool> AlterarAsync(Model.GENERO oGENERO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Selecionar", ReplyAction="http://tempuri.org/ICGenero/SelecionarResponse")]
        Model.GENERO Selecionar(int idGENERO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Selecionar", ReplyAction="http://tempuri.org/ICGenero/SelecionarResponse")]
        System.Threading.Tasks.Task<Model.GENERO> SelecionarAsync(int idGENERO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/SelecionarDescricao", ReplyAction="http://tempuri.org/ICGenero/SelecionarDescricaoResponse")]
        Model.GENERO SelecionarDescricao(string GENERODesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/SelecionarDescricao", ReplyAction="http://tempuri.org/ICGenero/SelecionarDescricaoResponse")]
        System.Threading.Tasks.Task<Model.GENERO> SelecionarDescricaoAsync(string GENERODesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Deletar", ReplyAction="http://tempuri.org/ICGenero/DeletarResponse")]
        bool Deletar(int idGENERO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/Deletar", ReplyAction="http://tempuri.org/ICGenero/DeletarResponse")]
        System.Threading.Tasks.Task<bool> DeletarAsync(int idGENERO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/ListaTodosGeneros", ReplyAction="http://tempuri.org/ICGenero/ListaTodosGenerosResponse")]
        Model.GENERO[] ListaTodosGeneros();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICGenero/ListaTodosGeneros", ReplyAction="http://tempuri.org/ICGenero/ListaTodosGenerosResponse")]
        System.Threading.Tasks.Task<Model.GENERO[]> ListaTodosGenerosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICGeneroChannel : View.CGenero.ICGenero, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CGeneroClient : System.ServiceModel.ClientBase<View.CGenero.ICGenero>, View.CGenero.ICGenero {
        
        public CGeneroClient() {
        }
        
        public CGeneroClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CGeneroClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CGeneroClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CGeneroClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Cadastrar(Model.GENERO oGENERO) {
            return base.Channel.Cadastrar(oGENERO);
        }
        
        public System.Threading.Tasks.Task<bool> CadastrarAsync(Model.GENERO oGENERO) {
            return base.Channel.CadastrarAsync(oGENERO);
        }
        
        public bool Alterar(Model.GENERO oGENERO) {
            return base.Channel.Alterar(oGENERO);
        }
        
        public System.Threading.Tasks.Task<bool> AlterarAsync(Model.GENERO oGENERO) {
            return base.Channel.AlterarAsync(oGENERO);
        }
        
        public Model.GENERO Selecionar(int idGENERO) {
            return base.Channel.Selecionar(idGENERO);
        }
        
        public System.Threading.Tasks.Task<Model.GENERO> SelecionarAsync(int idGENERO) {
            return base.Channel.SelecionarAsync(idGENERO);
        }
        
        public Model.GENERO SelecionarDescricao(string GENERODesc) {
            return base.Channel.SelecionarDescricao(GENERODesc);
        }
        
        public System.Threading.Tasks.Task<Model.GENERO> SelecionarDescricaoAsync(string GENERODesc) {
            return base.Channel.SelecionarDescricaoAsync(GENERODesc);
        }
        
        public bool Deletar(int idGENERO) {
            return base.Channel.Deletar(idGENERO);
        }
        
        public System.Threading.Tasks.Task<bool> DeletarAsync(int idGENERO) {
            return base.Channel.DeletarAsync(idGENERO);
        }
        
        public Model.GENERO[] ListaTodosGeneros() {
            return base.Channel.ListaTodosGeneros();
        }
        
        public System.Threading.Tasks.Task<Model.GENERO[]> ListaTodosGenerosAsync() {
            return base.Channel.ListaTodosGenerosAsync();
        }
    }
}
