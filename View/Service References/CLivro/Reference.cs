//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace View.CLivro {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CLivro.ICLivro")]
    public interface ICLivro {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/Cadastrar", ReplyAction="http://tempuri.org/ICLivro/CadastrarResponse")]
        bool Cadastrar(Model.LIVRO oLivro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/Cadastrar", ReplyAction="http://tempuri.org/ICLivro/CadastrarResponse")]
        System.Threading.Tasks.Task<bool> CadastrarAsync(Model.LIVRO oLivro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/Alterar", ReplyAction="http://tempuri.org/ICLivro/AlterarResponse")]
        bool Alterar(Model.LIVRO oLivro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/Alterar", ReplyAction="http://tempuri.org/ICLivro/AlterarResponse")]
        System.Threading.Tasks.Task<bool> AlterarAsync(Model.LIVRO oLivro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/SelecionarID", ReplyAction="http://tempuri.org/ICLivro/SelecionarIDResponse")]
        Model.LIVRO SelecionarID(int IDLivro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/SelecionarID", ReplyAction="http://tempuri.org/ICLivro/SelecionarIDResponse")]
        System.Threading.Tasks.Task<Model.LIVRO> SelecionarIDAsync(int IDLivro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/SelecionarTitulo", ReplyAction="http://tempuri.org/ICLivro/SelecionarTituloResponse")]
        Model.LIVRO SelecionarTitulo(string LivroTit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/SelecionarTitulo", ReplyAction="http://tempuri.org/ICLivro/SelecionarTituloResponse")]
        System.Threading.Tasks.Task<Model.LIVRO> SelecionarTituloAsync(string LivroTit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/Deletar", ReplyAction="http://tempuri.org/ICLivro/DeletarResponse")]
        bool Deletar(int IDLivro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/Deletar", ReplyAction="http://tempuri.org/ICLivro/DeletarResponse")]
        System.Threading.Tasks.Task<bool> DeletarAsync(int IDLivro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/ListaTodosLivros", ReplyAction="http://tempuri.org/ICLivro/ListaTodosLivrosResponse")]
        Model.LIVRO[] ListaTodosLivros();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICLivro/ListaTodosLivros", ReplyAction="http://tempuri.org/ICLivro/ListaTodosLivrosResponse")]
        System.Threading.Tasks.Task<Model.LIVRO[]> ListaTodosLivrosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICLivroChannel : View.CLivro.ICLivro, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CLivroClient : System.ServiceModel.ClientBase<View.CLivro.ICLivro>, View.CLivro.ICLivro {
        
        public CLivroClient() {
        }
        
        public CLivroClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CLivroClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CLivroClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CLivroClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Cadastrar(Model.LIVRO oLivro) {
            return base.Channel.Cadastrar(oLivro);
        }
        
        public System.Threading.Tasks.Task<bool> CadastrarAsync(Model.LIVRO oLivro) {
            return base.Channel.CadastrarAsync(oLivro);
        }
        
        public bool Alterar(Model.LIVRO oLivro) {
            return base.Channel.Alterar(oLivro);
        }
        
        public System.Threading.Tasks.Task<bool> AlterarAsync(Model.LIVRO oLivro) {
            return base.Channel.AlterarAsync(oLivro);
        }
        
        public Model.LIVRO SelecionarID(int IDLivro) {
            return base.Channel.SelecionarID(IDLivro);
        }
        
        public System.Threading.Tasks.Task<Model.LIVRO> SelecionarIDAsync(int IDLivro) {
            return base.Channel.SelecionarIDAsync(IDLivro);
        }
        
        public Model.LIVRO SelecionarTitulo(string LivroTit) {
            return base.Channel.SelecionarTitulo(LivroTit);
        }
        
        public System.Threading.Tasks.Task<Model.LIVRO> SelecionarTituloAsync(string LivroTit) {
            return base.Channel.SelecionarTituloAsync(LivroTit);
        }
        
        public bool Deletar(int IDLivro) {
            return base.Channel.Deletar(IDLivro);
        }
        
        public System.Threading.Tasks.Task<bool> DeletarAsync(int IDLivro) {
            return base.Channel.DeletarAsync(IDLivro);
        }
        
        public Model.LIVRO[] ListaTodosLivros() {
            return base.Channel.ListaTodosLivros();
        }
        
        public System.Threading.Tasks.Task<Model.LIVRO[]> ListaTodosLivrosAsync() {
            return base.Channel.ListaTodosLivrosAsync();
        }
    }
}
